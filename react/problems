- UI not refreshed after code change
  - rm .git/index.lock

- Errors
#####   Uncaught TypeError: x.map is not a function  #####
  x is not an array

#####   Uncaught ReferenceError: props is not defined  #####
Use this.props

#####   Objects are not valid as a React child  #####
fetch(url)
  .then((response) => {
    return response.json()})
  .then((response) => {
    this.setState(response);
  })
  .catch(error => {
    this.setState(error);
  })


- npm start doesn’t detect changes
  When you save a file while npm start is running, the browser should refresh with the updated code.
  If this doesn’t happen, try one of the following workarounds:

  If your project is in a Dropbox folder, try moving it out.

  If the watcher doesn’t see a file called index.js and you’re referencing it by the folder name,
  you need to restart the watcher due to a Webpack bug.
  Some editors like Vim and IntelliJ have a “safe write” feature that currently breaks the watcher.
  You will need to disable it. Follow the instructions in “Adjusting Your Text Editor”.

  If your project path contains parentheses, try moving the project to a path without them.
  This is caused by a Webpack watcher bug.
  On Linux and macOS, you might need to tweak system settings to allow more watchers.

  If the project runs inside a virtual machine such as (a Vagrant provisioned) VirtualBox,
  create an .env file in your project directory if it doesn’t exist, and add CHOKIDAR_USEPOLLING=true to it.

  This ensures that the next time you run npm start, the watcher uses the polling mode, as necessary inside a VM.

  If none of these solutions help please leave a comment in this thread.
