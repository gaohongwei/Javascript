##### Babel #####
Babel is a JavaScript compiler
Write next generation JavaScript,
(a) => {a}    (function(a){a;});
(a) => (a)    (function(a){ return a;});

let a=0;  var a=0;


##### jsx #####
JSX is a preprocessor step that
adds XML syntax to JavaScript.
You can definitely use React without JSX but JSX makes React a lot more elegant.
Just like XML, JSX tags have a tag name, attributes, and children.


i.  require vs import
   // ES5
var React = require('react');

// ES6
import React from 'react';
ii. export vs exports

   // ES5
module.exports = Component;

// ES6
export default Component;
iii.    component and function
  // ES5
var MyComponent = React.createClass({
    render: function() {
        return <h3>Hello Edureka!</h3>;
    }
});

// ES6
class MyComponent extends React.Component {
    render() {
        return <h3>Hello Edureka!</h3>;
    }
}
iv. props

// ES5
var App = React.createClass({
    propTypes: { name: React.PropTypes.string },
    render: function() {
        return <h3>Hello, {this.props.name}!</h3>;
    }
});

// ES6
class App extends React.Component {
    render() {
        return <h3>Hello, {this.props.name}!</h3>;
    }
}
v.  state
// ES5
var App = React.createClass({
    getInitialState: function() {
        return { name: 'world' };
    },
    render: function() {
        return <h3>Hello, {this.state.name}!</h3>;
    }
});

// ES6
class App extends React.Component {
    constructor() {
        super();
        this.state = { name: 'world' };
    }
    render() {
        return <h3>Hello, {this.state.name}!</h3>;
    }
}
